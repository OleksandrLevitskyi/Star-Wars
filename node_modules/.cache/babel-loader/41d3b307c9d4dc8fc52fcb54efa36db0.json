{"ast":null,"code":"var _jsxFileName = \"/Users/sashalevitskiy/Desktop/star-wars/src/components/Fliter/Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Context from \"../../context/context\";\nimport SearchDropDown from \"../SearchDropDown\";\nimport { FilterWrapper } from \"./styles\";\nimport { ALL_PERSONS } from \"../../mocked/scheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(ALL_PERSONS, {\n    fetchPolicy: \"catch-first\"\n  });\n  const {\n    setFilteredPersons,\n    setShowDropDown\n  } = useContext(Context);\n\n  const filterHandler = ({\n    target: {\n      value\n    }\n  }) => searchPerson(value);\n\n  const searchPerson = value => {\n    setFilteredPersons(data.allPeople.people.filter(person => person.name.toLowerCase().trim().includes(value.toLowerCase().trim())));\n    onShowDropDown(value);\n  };\n\n  const onShowDropDown = value => {\n    if (value.length !== 0) {\n      setShowDropDown(true);\n    } else {\n      setShowDropDown(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FilterWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Choose Person\",\n      onChange: filterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchDropDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"5O+Vj77s04Yz/Zg1ptIR0eMpu+k=\", false, function () {\n  return [useQuery];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/sashalevitskiy/Desktop/star-wars/src/components/Fliter/Filter.jsx"],"names":["React","useContext","useQuery","Context","SearchDropDown","FilterWrapper","ALL_PERSONS","Filter","data","fetchPolicy","setFilteredPersons","setShowDropDown","filterHandler","target","value","searchPerson","allPeople","people","filter","person","name","toLowerCase","trim","includes","onShowDropDown","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWN,QAAQ,CAACI,WAAD,EAAc;AACrCG,IAAAA,WAAW,EAAE;AADwB,GAAd,CAAzB;AAIA,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAA0CV,UAAU,CAACE,OAAD,CAA1D;;AAEA,QAAMS,aAAa,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAD,KAA2BC,YAAY,CAACD,KAAD,CAA7D;;AAEA,QAAMC,YAAY,GAAID,KAAD,IAAW;AAC9BJ,IAAAA,kBAAkB,CAChBF,IAAI,CAACQ,SAAL,CAAeC,MAAf,CAAsBC,MAAtB,CAA8BC,MAAD,IAC3BA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,IAA1B,GAAiCC,QAAjC,CAA0CT,KAAK,CAACO,WAAN,GAAoBC,IAApB,EAA1C,CADF,CADgB,CAAlB;AAKAE,IAAAA,cAAc,CAACV,KAAD,CAAd;AACD,GAPD;;AASA,QAAMU,cAAc,GAAIV,KAAD,IAAW;AAChC,QAAIA,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACtBd,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACLA,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAND;;AAQA,sBACE,QAAC,aAAD;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,eAA/B;AAA+C,MAAA,QAAQ,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAML,M;UACaL,Q;;;KADbK,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Context from \"../../context/context\";\nimport SearchDropDown from \"../SearchDropDown\";\nimport { FilterWrapper } from \"./styles\";\nimport { ALL_PERSONS } from \"../../mocked/scheme\";\n\n\nconst Filter = () => {\n  const { data } = useQuery(ALL_PERSONS, {\n    fetchPolicy: \"catch-first\",\n  });\n\n  const { setFilteredPersons, setShowDropDown } = useContext(Context);\n\n  const filterHandler = ({ target: { value } }) => searchPerson(value);\n\n  const searchPerson = (value) => {\n    setFilteredPersons(\n      data.allPeople.people.filter((person) =>\n        person.name.toLowerCase().trim().includes(value.toLowerCase().trim())\n      )\n    );\n    onShowDropDown(value);\n  };\n\n  const onShowDropDown = (value) => {\n    if (value.length !== 0) {\n      setShowDropDown(true);\n    } else {\n      setShowDropDown(false);\n    }\n  };\n\n  return (\n    <FilterWrapper>\n      <input type=\"text\" placeholder=\"Choose Person\" onChange={filterHandler} />\n      <SearchDropDown />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}