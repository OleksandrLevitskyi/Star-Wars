{"ast":null,"code":"var _jsxFileName = \"/Users/sashalevitskiy/Desktop/star-wars/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Context from \"./context/context\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport LogoutPage from \"./pages/LogoutPage\";\nimport { verifUser } from \"./mocked/user\";\nimport { ALL_PERSONS } from \"./mocked/scheme\";\nimport { useQuery } from \"@apollo/client\";\nimport PrivateRoute from \"./route/ProtectedRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrapper = styled.div`\n  width: 1350px;\n  margin: 0 auto;\n`;\n_c = AppWrapper;\n\nconst App = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    data\n  } = useQuery(ALL_PERSONS, {\n    fetchPolicy: \"catch-first\"\n  });\n  const [loggedIn, setIsLogin] = useState(false);\n  const [showDropDown, setShowDropDown] = useState(false);\n  const [choosePerson, setChoosePerson] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n\n  const onLogin = ({\n    email,\n    password\n  }) => {\n    if (email === verifUser.email && password === verifUser.password) {\n      setIsLogin(true);\n      setFilteredPersons(data.allPeople.people);\n      history.push(\"/home\");\n    } else {\n      alert(\"Pls try again\");\n    }\n  };\n\n  const onLogOut = () => {\n    setIsLogin(false);\n    history.push(\"/login\");\n  };\n\n  const onChoose = (name, id) => {\n    setChoosePerson([...choosePerson, {\n      name,\n      id\n    }]);\n    setFilteredPersons(filteredPersons.filter(person => person.id === id));\n    setShowDropDown(false);\n  };\n\n  console.log(async);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      loggedIn,\n      onLogin,\n      onLogOut,\n      showDropDown,\n      onChoose,\n      choosePerson,\n      setChoosePerson,\n      setShowDropDown,\n      setFilteredPersons,\n      filteredPersons\n    },\n    children: /*#__PURE__*/_jsxDEV(AppWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          component: LogoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/wRwNHjSU1RzbiIcJCRxcDjLT6A=\", false, function () {\n  return [useHistory, useQuery];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/sashalevitskiy/Desktop/star-wars/src/App.js"],"names":["React","useState","Route","Switch","useHistory","styled","Context","Header","HomePage","LoginPage","LogoutPage","verifUser","ALL_PERSONS","useQuery","PrivateRoute","AppWrapper","div","App","history","data","fetchPolicy","loggedIn","setIsLogin","showDropDown","setShowDropDown","choosePerson","setChoosePerson","filteredPersons","setFilteredPersons","onLogin","email","password","allPeople","people","push","alert","onLogOut","onChoose","name","id","filter","person","console","log","async"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Context from \"./context/context\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport LogoutPage from \"./pages/LogoutPage\";\nimport { verifUser } from \"./mocked/user\";\nimport { ALL_PERSONS } from \"./mocked/scheme\";\nimport { useQuery } from \"@apollo/client\";\nimport PrivateRoute from \"./route/ProtectedRoute\";\n\nconst AppWrapper = styled.div`\n  width: 1350px;\n  margin: 0 auto;\n`;\n\nconst App = () => {\n  const history = useHistory();\n\n  const { data } = useQuery(ALL_PERSONS, {\n    fetchPolicy: \"catch-first\",\n  });\n\n  \n\n  const [loggedIn, setIsLogin] = useState(false);\n  const [showDropDown, setShowDropDown] = useState(false);\n  const [choosePerson, setChoosePerson] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n\n  const onLogin = ({ email, password }) => {\n    if (email === verifUser.email && password === verifUser.password) {\n      setIsLogin(true);\n      setFilteredPersons(data.allPeople.people);\n      history.push(\"/home\");\n    } else {\n      alert(\"Pls try again\");\n    }\n  };\n\n  const onLogOut = () => {\n    setIsLogin(false);\n    history.push(\"/login\");\n  };\n\n  const onChoose = (name, id) => {\n    setChoosePerson([...choosePerson, { name, id }]);\n    setFilteredPersons(filteredPersons.filter((person) => person.id === id));\n    setShowDropDown(false);\n  };\n\n  console.log(async)\n  \n\n  return (\n    <Context.Provider\n      value={{\n        loggedIn,\n        onLogin,\n        onLogOut,\n        showDropDown,\n        onChoose,\n        choosePerson,\n        setChoosePerson,\n        setShowDropDown,\n        setFilteredPersons,\n        filteredPersons,\n      }}\n    >\n      <AppWrapper>\n        <Header />\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/logout\" component={LogoutPage} />\n          <PrivateRoute path=\"/\" component={HomePage} />\n        </Switch>\n      </AppWrapper>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}